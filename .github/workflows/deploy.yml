name: Deploy to AWS ECS

on:
  push:
    branches:
      - master  # Run this workflow on every push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set build number
        run: echo "Run Number:${{ github.run_number }}"
        
      - name: Set directory name
        run: |
         cd ../../ 
         echo "directory1 : $(pwd)"
         
         cd ../
         echo "directory2 : $(pwd)"

         cd .
         echo "directory3 : $(pwd)"
        
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
       
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up jdk 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64

      - name: Build with Maven
        run: mvn clean install
        
      - name: Build Docker image
        id: build-image
        env:
          REPO_URI: '600627340343.dkr.ecr.us-east-1.amazonaws.com/spring-boot-example'
          IMAGE_NAME: 'ems-backend'
        run: |
          docker build -t ems-backend:${{ github.run_number }} .
          docker tag ems-backend:${{ github.run_number }} 600627340343.dkr.ecr.us-east-1.amazonaws.com/spring-boot-example:${{ github.run_number }}

      - name: Push to Amazon ECR
        env:
          REPO_URI: '600627340343.dkr.ecr.us-east-1.amazonaws.com/spring-boot-example'
        run: |
          docker push 600627340343.dkr.ecr.us-east-1.amazonaws.com/spring-boot-example:${{ github.run_number }}

      - name: Fill in new image id
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
         task-definition: springboot-task.json
         container-name: springboot-example
         image: ${{ steps.build-image.outputs.image }}
          
      - name: Set variable
        run: |
          echo "ECS_SERVICE=springboot-example-service" >> $GITHUB_ENV
          echo "ECS_CLUSTER=panda-work" >> $GITHUB_ENV

      - name: Deploy in ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        env:
          ECS_CLUSTER: ${{ env.ECS_CLUSTER }}
          ECS_SERVICE: ${{ env.ECS_SERVICE }}
        with:
         task-definition: ${{ steps.task-def.outputs.task-definition }}
         service: $ECS_SERVICE
         cluster: $ECS_CLUSTER
         wait-for-service-stability: true

